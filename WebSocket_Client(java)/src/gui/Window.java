/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import static gui.drawPoint.pX;
import java.awt.Color;
import java.awt.Font;
import observers.IObserver;
import simulator.Configuration;
import websocket_client.Coordinate;

/**
 *
 * 
 */
public class Window extends javax.swing.JFrame implements IObserver {

    /**
     * Creates new form Window
     */
    public Window() {

        initComponents();
        switch (Configuration._POSITION) {
            case 0:
                this.setLocation(0, 0);
                break;
            //oeste
            case 1:
                this.setLocation(500, 0);
                break;
            //este
            case 2:
                this.setLocation(1000, 0);
                break;
            //sur
            case 3:
                this.setLocation(1500, 0);
                break;
            case 4:
                this.setLocation(0, 500);
                break;
            case 5:
                this.setLocation(500, 500);
                break;
            case 6:
                this.setLocation(1000, 500);
                break;
            case 7:
                this.setLocation(1500, 500);
                break;
            default:
                Configuration._POSITION = -1;
                break;
        }
        Configuration._POSITION++;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 531, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 530, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
/**
     * After an observable instance changes, an application calling the
     * Observable's notifyObservers method causes all of its observers to be
     * notified of the change by a call this method.
     *
     * @param pNew
     */
    @Override
    public void update(Coordinate pNew) {
        drawPoint.drawBluePoint(jPanel1.getGraphics(), pNew._Coordinate, pNew._Direction);
        drawPoint.draw_RedPoint(jPanel1.getGraphics());
    }
}
